// Generated by CoffeeScript 1.3.3
(function() {
  var Aloha;

  requirejs.config({
    baseUrl: "js/lib/",
    paths: {
      app: "../app",
      jquery: "require-jquery",
      backbone: "backbone-min",
      underscore: "underscore-min",
      jqueryui: "jquery-ui-1.8.19.custom.min",
      bootstrap: "bootstrap/js/bootstrap.min",
      ich: "ICanHaz.min",
      masonry: "jquery.masonry.min",
      json2: "json2",
      fileupload: "file.upload",
      aloha: "aloha/lib/aloha-full",
      fileUploader: "file_uploader/fileuploader",
      drag: "jquery.drag"
    },
    shim: {
      ich: {
        exports: "ich"
      },
      bootstrap: {
        deps: ["jqueryui"],
        exports: "bootstrap"
      },
      underscore: {
        exports: "_"
      },
      backbone: {
        deps: ["underscore", "jquery"],
        exports: "Backbone"
      }
    }
  });

  if (window.Aloha === undefined || window.Aloha === null) {
    Aloha = window.Aloha = {};
  }

  define("core", ["jquery", "drag", "masonry", "jqueryui", "bootstrap"], function($) {});

  Aloha.settings = {
    locale: "en",
    sidebar: {
      disabled: true
    },
    plugins: {
      load: "common/format, common/link, common/image",
      format: {
        config: ["b", "i", "p", "h1", "h2", "h3", "pre", "removeFormat"]
      }
    }
  };

  requirejs(["core", "ich", "app/views/mainView", "app/views/editView"], function(_$, ich, mainView, editView) {
    var myRoutes, router;
    $(document).ready(function() {
      var scroll;
      if (window.location.hash && window.location.hash === "#_=_") {
        if (window.history && history.pushState) {
          return window.history.pushState("", document.title, window.location.pathname);
        } else {
          scroll = {
            top: document.body.scrollTop,
            left: document.body.scrollLeft
          };
          window.location.hash = "";
          document.body.scrollTop = scroll.top;
          return document.body.scrollLeft = scroll.left;
        }
      }
    });
    myRoutes = Backbone.Router.extend({
      routes: {
        "": "main",
        grabsite: "grabsite",
        login: "login"
      },
      grabsite: function() {
        var editPage;
        return editPage = new editView();
      },
      main: function() {
        var mainPage;
        return mainPage = new mainView();
      },
      login: function() {
        $("#login").modal("show");
        return $("#login").on("hide", function() {
          return router.navigate();
        });
      }
    });
    router = new myRoutes();
    return Backbone.history.start({
      pushState: true
    });
  });

}).call(this);
