// Generated by CoffeeScript 1.3.3
(function() {

  (function(window) {
    var $, MainView;
    $ = _$;
    MainView = Backbone.View.extend({
      el: 'body',
      cloneSite: function() {
        var url,
          _this = this;
        url = $('#urlInput').val();
        return $.ajax({
          url: "/grabsite",
          type: 'POST',
          data: {
            url: url
          }
        }).done(function(data) {
          var $data, bodyScirpts, headScripts;
          $data = String(data).replace(/<\!DOCTYPE[^>]*>/i, "").replace(/<(html|head|body)([\s\>])/g, "<div class=\"document-$1\"$2").replace(/<\/(html|head|body)\>/g, "</div>");
          headScripts = $($data).find('.document-head').find('.document-script');
          bodyScirpts = $($data).find('.document-body').find('.document-script');
          $('head').append($($data).find('.document-head').html());
          $('head').remove('.document-script');
          $('body').append($($data).find('.document-body').html());
          $('.document-script').remove();
          $('body').find("*").each(function() {
            if (($(this).text() != null) && $(this).text() !== "") {
              return $(this).addClass('editableClone');
            }
          });
          requirejs(["aloha"], function() {
            return Aloha.ready(function() {
              return Aloha.jQuery('.editableClone').aloha();
            });
          });
          return headScripts.each(function() {
            var $script, contentNode, scriptNode, scriptText;
            $script = $(this);
            scriptText = $script.html();
            scriptNode = document.createElement("script");
            contentNode = $($script.data('parent'));
            try {
              scriptNode.appendChild(document.createTextNode(scriptText));
              $('head').append(scriptNode);
            } catch (e) {
              scriptNode.text = scriptText;
              $('head').append(scriptNode);
            }
            if ($(this).attr("src") != null) {
              return scriptNode.setAttribute("src", $(this).attr("src"));
            }
          });
        });
      },
      render: function() {
        ich.grabTemplates();
        return this.$el.html('').append(ich.inputTemp());
      },
      initialize: function() {
        _.bindAll(this, "render", "cloneSite");
        return this.render();
      }
    });
    return window.MainView = MainView;
  })(window);

}).call(this);
